{"version":3,"sources":["../../src/utils/cache-lmdb.ts"],"names":["cacheDbFile","process","env","NODE_ENV","FORCE_TEST_DATABASE_ID","JEST_WORKER_ID","GatsbyCacheLmdb","constructor","name","directory","path","join","cwd","cache","init","fs","ensureDirSync","getStore","store","compression","maxDbs","getDb","db","openDB","get","key","set","value","put","del","remove"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;AACA,MAAMA,WAAW,GACfC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAA0B,MAA1B,GACK,eACC;AACA;AACA;AAHF,yBAIEF,OAAO,CAACC,GAAR,CAAYE,sBAJd,yEAIwCH,OAAO,CAACC,GAAR,CAAYG,cACnD,EANL,GAOK,aARP;;AAUe,MAAMC,eAAN,CAAsB;AAInC;AAEA;AACA;AACA;AAGAC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,IAAI,GAAI;AAAV,GAAD,EAAoC;AAC7C,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,SAAL,GAAiBC,cAAKC,IAAL,CAAUV,OAAO,CAACW,GAAR,EAAV,EAA0B,iBAAgBJ,IAAK,EAA/C,CAAjB;AACA,SAAKK,KAAL,GAAa,IAAb;AACD;;AAEDC,EAAAA,IAAI,GAAoB;AACtBC,qBAAGC,aAAH,CAAiB,KAAKP,SAAtB;;AACA,WAAO,IAAP;AACD;;AAEsB,SAARQ,QAAQ,GAAiB;AACtC,QAAI,CAACX,eAAe,CAACY,KAArB,EAA4B;AAC1BZ,MAAAA,eAAe,CAACY,KAAhB,GAAwB,qBAAK;AAC3BV,QAAAA,IAAI,EAAG,MADoB;AAE3BE,QAAAA,IAAI,EAAEA,cAAKC,IAAL,CAAUV,OAAO,CAACW,GAAR,EAAV,EAA0B,UAASZ,WAAY,EAA/C,CAFqB;AAG3BmB,QAAAA,WAAW,EAAE,IAHc;AAI3BC,QAAAA,MAAM,EAAE;AAJmB,OAAL,CAAxB;AAMD;;AACD,WAAOd,eAAe,CAACY,KAAvB;AACD;;AAEOG,EAAAA,KAAK,GAAa;AACxB,QAAI,CAAC,KAAKC,EAAV,EAAc;AACZ,WAAKA,EAAL,GAAUhB,eAAe,CAACW,QAAhB,GAA2BM,MAA3B,CAAkC;AAC1Cf,QAAAA,IAAI,EAAE,KAAKA;AAD+B,OAAlC,CAAV;AAGD;;AACD,WAAO,KAAKc,EAAZ;AACD;;AAEQ,QAAHE,GAAG,CAAcC,GAAd,EAA2C;AAClD,WAAO,KAAKJ,KAAL,GAAaG,GAAb,CAAiBC,GAAjB,CAAP;AACD;;AAEQ,QAAHC,GAAG,CAAID,GAAJ,EAAiBE,KAAjB,EAAmD;AAC1D,UAAM,KAAKN,KAAL,GAAaO,GAAb,CAAiBH,GAAjB,EAAsBE,KAAtB,CAAN;AACA,WAAOA,KAAP;AACD;;AAEQ,QAAHE,GAAG,CAACJ,GAAD,EAA6B;AACpC,WAAQ,KAAKJ,KAAL,GAAaS,MAAb,CAAoBL,GAApB,CAAR;AACD;;AAtDkC","sourcesContent":["import { open, RootDatabase, Database } from \"lmdb-store\"\nimport fs from \"fs-extra\"\nimport path from \"path\"\n\n// Since the regular GatsbyCache saves to \"caches\" this should be \"caches-lmdb\"\nconst cacheDbFile =\n  process.env.NODE_ENV === `test`\n    ? `caches-lmdb-${\n        // FORCE_TEST_DATABASE_ID will be set if this gets executed in worker context\n        // when running jest tests. JEST_WORKER_ID will be set when this gets executed directly\n        // in test context (jest will use jest-worker internally).\n        process.env.FORCE_TEST_DATABASE_ID ?? process.env.JEST_WORKER_ID\n      }`\n    : `caches-lmdb`\n\nexport default class GatsbyCacheLmdb {\n  private static store\n  private db: Database | undefined\n  public readonly name: string\n  // Needed for plugins that want to write data to the cache directory\n  public readonly directory: string\n  // TODO: remove `.cache` in v4. This is compat mode - cache-manager cache implementation\n  // expose internal cache that gives access to `.del` function that wasn't available in public\n  // cache interface (gatsby-plugin-sharp use it to clear no longer needed data)\n  public readonly cache: GatsbyCacheLmdb\n\n  constructor({ name = `db` }: { name: string }) {\n    this.name = name\n    this.directory = path.join(process.cwd(), `.cache/caches/${name}`)\n    this.cache = this\n  }\n\n  init(): GatsbyCacheLmdb {\n    fs.ensureDirSync(this.directory)\n    return this\n  }\n\n  private static getStore(): RootDatabase {\n    if (!GatsbyCacheLmdb.store) {\n      GatsbyCacheLmdb.store = open({\n        name: `root`,\n        path: path.join(process.cwd(), `.cache/${cacheDbFile}`),\n        compression: true,\n        maxDbs: 200,\n      })\n    }\n    return GatsbyCacheLmdb.store\n  }\n\n  private getDb(): Database {\n    if (!this.db) {\n      this.db = GatsbyCacheLmdb.getStore().openDB({\n        name: this.name,\n      })\n    }\n    return this.db\n  }\n\n  async get<T = unknown>(key): Promise<T | undefined> {\n    return this.getDb().get(key)\n  }\n\n  async set<T>(key: string, value: T): Promise<T | undefined> {\n    await this.getDb().put(key, value)\n    return value\n  }\n\n  async del(key: string): Promise<void> {\n    return (this.getDb().remove(key) as unknown) as Promise<void>\n  }\n}\n"],"file":"cache-lmdb.js"}